<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itheima.mapper.BrandMapper">
    <!--
        1，数据库表的字段名称  和 实体的属性名称 不一样，则不能自动封装数据
            1) 起别名：对不一样的列表起别名，让别名和实体类的属性名一样
                缺点：每次查询都要定义一次别名；
                    sql 片段
                        缺点：不灵活
             2) resultMap:
                2.1 定义<resultMap> 标签
                2.2 在<select> 标签中，使用resultMap属性替换 resultType属性；
    -->
    <!--
        sql 片段
    -->
    <!--   <sql id="brand_column">
           id, brand_name as brandName, company_name as companyName,ordered, description, status
       </sql>
       <select id="selectAll" resultType="Brand">
           select
               <include refid="brand_column"/>
           from tb_brand;
       </select>-->

    <!--<select id="selectAll" resultType="Brand">-->
    <!--select * from tb_brand;-->
    <!--</select>-->


    <!--
        id :唯一标识
        type：映射的类型：支持别名
    -->
    <resultMap id="brandResultMap" type="brand">
        <!--
            id: 完成主键字段的映射
                colunm: 表的列明
                property：实体类的属性名
             result：完成一般字段的映射
                colunm: 表的列明
                property：实体类的属性名
        -->
        <result column="brand_name" property="brandName"/>
        <result column="company_name" property="companyName"/>
    </resultMap>

    <select id="selectAll" resultMap="brandResultMap">
        select
            *
        from tb_brand;
    </select>
    <!--
        * 参数占位符：
            1，#{}会将替换为？，为了防止sql注入
            2，${}拼sql，会存在SQL注入问题
            3，使用时机：
                参与传递时：#{}
                表名和列明不固定的情况下：${}
         * 参数类型：parameterType：可以省略
         * 特殊字符处理：
              1，转移字符
              2，CDATA区
    -->
    <select id="selectById"  resultMap="brandResultMap">
        select
            *
        from tb_brand where id
          <![CDATA[
            =
          ]]> #{id};
    </select>
    <!--
        动态条件查询
            *if ： 条件判断
                *test 逻辑表达式；
             *  问题：
                * 恒等式所有条件都一样
                * <where>标签 代替where关键字
    -->
    <select id="selectByCondition"  resultMap="brandResultMap">
        select
            *
        from tb_brand
        <!-- where 1=1 -->
        <where>
            <if test="status != null">
               status = #{status}
            </if>
            <if test="companyName != null and companyName !='' ">
                and company_Name like #{companyName}
            </if>
            <if test="brandName != null and brandName !=''">
               and  brand_Name like #{brandName}
            </if>
        </where>
    </select>
    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select
        *
        from tb_brand
        <where>
            <choose>  <!--  相当于switch语句-->
                <when test="status != null">  <!--相当于case -->
                    status = #{status}
                </when>
                <when test="companyName != null and companyName !='' ">
                    company_Name like #{companyName}
                </when>
                <when test="brandName != null and brandName != '' ">
                    brand_Name like #{brandName}
                </when>
                <!--
                <otherwise>  类似于default
                   1=1
                </otherwise>
                -->
            </choose>
        </where>
    </select>
    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand(brand_name,company_name,ordered,description,status)
                values (#{brandName},#{companyName},#{ordered},#{description},#{status});
    </insert>
    <update id="update">
        update tb_brand
        <set>
            <if test="brandName !=null and brandName !=''">
                brand_name = #{brandName},
            </if>
            <if test="companyName !=null and companyName !=''">
                company_name = #{companyName},
            </if>
            <if test="ordered !=null">
                ordered = #{ordered},
            </if>
            <if test="description !=null and description !=''">
                description = #{description},
            </if>
            <if test="status !=null">
                status = #{status},
            </if>
        </set>
        where id =#{id};
    </update>
    <delete id="deleteById">
        delete from  tb_brand
        where id =#{id}
    </delete>
    <!--
        mybatis 会将数组参数，封装为一个Map集合，
            *默认：array = 数组
            * 使用@Param注解改变map集合的默认key的名称
    -->
    <delete id="deleteByIds">
      delete from tb_brand where id
        in
          <foreach collection="ids" item="id" separator="," open="(" close=")">
              #{id}
          </foreach>
          ;
    </delete>




</mapper>